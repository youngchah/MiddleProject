<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 영역에 SQL문에 맞는 태그를 사용하여 SQL문을 기술한다. 사용할 수 있는 기본적인 태그들
	 <select> ~~~ </select> 
	<insert> ~~~ </insert> 
	<update> ~~~ </update>
	 <delete> ~~~ </delete> 위 태그에서 
	사용되는 속성들 
	1) id : 해당 태그(SQL)를 호출할 때 namespace값과 연결하여 사용하는 고유 ID값 
	2) parameterType 
	: SQL문에 사용될 데이터가 들어있는 객체타입을 지정한다. (보통 VO클래스 또는 자바의 자료형이름 등이 사용된다.) 
	3) resultType 
	: select문을 실행한 결과를 담을 객체타입을 지정한다. (보통 VO클래스 또는 자바의 자료형이름 등이 사용된다.) 
	4) resultMap 
	: 결과레코드 컬럼명과 VO객체의 속성명이 다를 경우에 적절한 매핑을 위해 사용한다. -->
<!-- select 인경우 resultType , resultMap 설정이 꼭 있어야 한다. <<전체 출력>> -->

<mapper namespace="member">

	<select id="loginChk" parameterType="map" resultType="string">
		select mem_id
		from member
		where mem_id = #{uId} and mem_pass = #{uPw}
	</select>

	<insert id="insertMember" parameterType="member.vo.MemberVO">


		INSERT INTO MEMBER
		(
		MEM_ID,
		MEM_PASS,
		MEM_NAME,
		MEM_NICK,
		MEM_TEL,
		MEM_BIR,
		MEM_EMAIL,
		MEM_PC,
		MEM_ADDR1,
		MEM_ADDR2
		)
		VALUES
		(
		#{mem_Id},
		#{mem_Pass},
		#{mem_Name},
		#{mem_Nick},
		#{mem_Tel},
		#{mem_Bir},
		#{mem_Email},
		#{mem_Pc},
		#{mem_Addr1},
		#{mem_Addr2}

		)
	</insert>


	<select id="getLoginInfo" resultType="member.vo.MemberVO"
		parameterType="member.vo.MemberVO">

		select
		MEM_ID,
		MEM_PASS,
		MEM_NAME,
		MEM_NICK,
		MEM_TEL,
		MEM_BIR,
		MEM_EMAIL,
		MEM_PC,
		MEM_ADDR1,
		MEM_ADDR2,
		MEM_PROF,
		MEM_BAN,
		MEM_SIGN,
		MEM_TOKEN
		from member
		where mem_id = #{mem_Id} and mem_pass = #{mem_Pass} and mem_delyn = 'N'
	</select>


	<select id="findId" parameterType="member.vo.MemberVO"
		resultType="member.vo.MemberVO">
		select
		MEM_ID from member
		where mem_name = #{mem_Name} and 
		mem_email = #{mem_Email}

	</select>

	<select id="countMember" resultType="int">
	SELECT COUNT(*) FROM member where mem_delyn = 'N'
	
	</select>

	<select id="memberList" parameterType="map" resultType="member.vo.MemberVO">
		select A.* from(
		select ROWNUM AS RNUM, B.* from(
		select * from member 
		where mem_delyn = 'N'
		order by mem_name 
			)B
		<![CDATA[ where ROWNUM <= #{end}
		)A where A.rnum >= #{start} ]]>
	</select>

	<select id="selectAll"
		resultType="member.vo.MemberVO">

		select mem_id as memId,
       	mem_name as memName,
       	mem_nick as memNick,
       	mem_tel as memTel,
     	mem_bir as memBir,
        mem_email as memEmail,
        mem_pc as memPc,
        mem_addr1 as memAddr1,
        mem_addr2 as memAddr2
        from member;

	</select>


	<select id="getMember" parameterType="String" resultType="member.vo.MemberVO">
        SELECT MEM_ID, 
        MEM_NAME, 
        MEM_NICK, 
        MEM_TEL, 
        MEM_BIR, 
        MEM_EMAIL, 
        MEM_PC, 
        MEM_ADDR1, 
        MEM_ADDR2, 
        MEM_PROF
    	FROM MEMBER
    	WHERE MEM_ID = #{mem_Id}
	</select>
	
	<update id="deleteMember" parameterType="member.vo.MemberVO">
	update member set mem_delyn = 'Y' 
	where  mem_id = #{mem_Id}
	
	</update>
	
	
	
</mapper>




