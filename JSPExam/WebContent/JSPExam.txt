┌───────────────────────────────────
│	쉽게 배우는 JSP 웹 프로그래밍
│	# 연습문제 주관식 정리
│	# 요약정리를 기반으로 개념 정리
└───────────────────────────────────

01장 JSP개요 : 원리를 이해하고 개발 환경 구축하기

	01. 정적 웹 페이지와 동적 웹페이지의 차이점을 설명하시오.
		
		정적 웹 페이지는 컴퓨터에 저장된 텍스트 파일을 그대로 보는 것이고,
		동적 웹 페이지는 저장된 내용을 다른 변수로 가공 처리하여 보는 것이다
		정적 웹 페이지는 HTML(Hyper Text Markup Language)과 같은 웹 언어로 작성하고,
		동적 웹 페이지는 PHP(Personal Home Page), ASP(Active Server Page), JSP와 같은 웹 언어로 작성합니다.
		
		정적 웹 페이지는 미리 만들어놓은 정보만 보여주기 때문에 고객의 취향이나 변화에 적응할 수 없고,
		새로운 것을 추가, 수정, 삭제하는 작업을 모두 수동으로 처리해야 하므로 관리하기가 어렵습니다.
		하지만 동적인 요소가 없기 때문에 데이터베이스도 필요 없고 구축하기 쉬우며, 단순 문서로만 이루어져있어
		서버 간 통신이 거의 없고 속도가 빠릅니다.
		또한 정적 문서로만 이루어져 있기 때문에 모든 호스팅 서버에서도 동작할 수 있다는 것이 장점입니다.
		그러나 기술이 발전함에 따라 사용자의 기호에 맞게 능동적으로 변화하는 웹 페이지가 필요해져서
		이를 위해 동적 웹 페이지를 제공하는 PHP, ASP, JSP와 같은 언어가 개발되었습니다.
		
		현재 우리가 보는 대부분의 웹 페이지는 동적 웹 페이지라고 할 수 있습니다.
		동적 웹 페이지는 사용자가 웹 페이지에 글을 작성하거나 환경 설정 등을 바꾸면
		그 내용이 서버에 있는 데이터베이스에 저장되고 결과가 웹 페이지에 반영되는 형태로 동작합니다.
		
		
	02. 웹 프로그래밍 언어 JSP의 특징을 설명하시오.
	
		1) JSP는 서블릿 기술의 확장입니다.
		
			JSP에서는 서블릿의 모든 기능을 사용할 수 있습니다.
			즉 서블릿과 마찬가지고 JDBC, JNDI, EJB 등을 모두 포함하고 있는 강력한 엔터프라이즈
			자바 API를 사용할 수 있습니다. 또한 쉽게 개발할 수 있도록 JSP에서는 내장객체, 미리 정의된 태그,
			표현식 언어와 사용자 정의 태그를 사용할 수 있습니다.
			
			*** JNDI란?
			JNDI(Java Naming and Directory Interface)는 Java 프로그래밍 언어를 사용하여
			작성된 어플리케이션에 이름 지정 및 디렉토리 기능을 제공하는 API입니다.
			
			*** EJB란?
			EJB(Enterprise Java Bean)는 분산 어플리케이션을 지원하는 컴포넌트 기반의 규약
			
		2) JSP는 유지 관리가 용이합니다.
		
			서블릿 기술에는 프레젠테이션 로직과 비즈니스 로직이 섞여 있지만 
			JSP기술의 경우 프레젠테이션 로직과 비즈니스 로직을 분리할 수 있기 때문에 관리하기가 쉽습니다.
			
		3) JSP는 빠른 개발이 가능합니다.
			
			코드를 수정했을 때, 서블릿에서는 업데이트를 하고 다시 컴파일해야합니다.
			그러나 JSP의 경우 다시 컴파일 하고 프로젝트를 배포할 필요가 없습니다.
			
		4) JSP로 개발하면 코드 길이를 줄일 수 있습니다.
		
			JSP에서는 다양한 액션태그, JSTL(JavaServer Pages Standard Tag Library),
			사용자 정의 태그 등의 다양한 태그와 표현 언어, 내장 객체 등을 사용함으로써 서블릿보다 코드를 줄일 수 있습니다.
			
	
	03. JSP 페이지의 처리 과정을 설명하시오.
	
		[책 24p 그림 참고] or [ch02 JSP 개요 PPT 9p 그림 참고]
		
		1) 웹 브라우저가 웹 서버에 JSP를 요청합니다.
			웹 서버는 요청된 Hello.jsp에서 jsp 확장자를 발견하여 JSP 페이지임을 확인하고
			웹 서버에 있는 JSP 컨테이너에 전달합니다.
			
		2) JSP 컨테이너는 JSP 페이지를 서블릿 프로그램인 Hello_jsp.java로 변환합니다.
		
		3) JSP 컨테이너가 서블릿 프로그램을 컴파일하여 Hello_jsp.class로 만들고 이를 웹 서버에 전달합니다.
		
		4) 웹 서버는 정적 웹 페이지처럼 *.class 의 실행 결과를 웹 브라우저에 응답으로 전달하므로
			웹 브라우저는 새로 가공된 HTML 페이지를 동적으로 처리한 결과를 보여줍니다.
			
			